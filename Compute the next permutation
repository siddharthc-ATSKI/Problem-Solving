// NEXT PERMUTAION

#include<bits/stdc++.h>
using namespace std;

// void NextPermutation(vector<int>& perm) {
        
//     for(int i = perm.size() - 1; i > 0; i--) {
//         for(int j = i-1; j >= 0; j--) {
//             if(perm[i] > perm[j]) {
//                 swap(perm[i], perm[j]);
    
//                 reverse(perm.begin() + j+1, perm.end());
//                 return;
//             }
//         }
//     }
// }

void NextPermutation(vector<int>& perm) {
    int k = perm.size() - 2;

    while(k >= 0 && perm[k] >= perm[k+1])
        k--;
    
    if(k == -1)
        return;
    
    int l = perm.size() - 1;
    while(perm[l] < perm[k])
        l--;
    
    swap(perm[k], perm[l]);
    reverse(perm.begin() + k + 1, perm.end());
}

int main() {
    vector<int> perm {2,3,6,5,4,1};

    cout<<"Number : "<<endl;
    for(int i=0; i < perm.size(); i++)
        cout<<perm[i]<<" ";

    cout<<endl;

    NextPermutation(perm);

    cout<<"Next permutation of the number : "<<endl;
    for(int i=0; i < perm.size(); i++)
        cout<<perm[i]<<" ";

    cout<<endl;
}
